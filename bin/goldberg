#!/usr/bin/env ruby
require File.expand_path('../../config/environment', __FILE__)
Rails.logger = Logger.new(STDOUT)

require 'commander/import'

program :name, 'Goldberg'
program :version, '0.0.1'
program :description, 'Yet another CI server. With pipelines.'

command :add do |c|
  c.syntax = 'goldberg add <url> <name> [--branch <branch_name>] [--scm <scm_type>]'  
  c.description = 'Add a new codebase to build'
  c.option '--branch STRING', String, 'branch to build, defaults to \'master\''
  c.option '--scm STRING', String, "scm to use - 'git' and 'svn' are currently supported, defaults to 'git'"
  c.action do |args, options|
    options.default :branch => 'master'
    options.default :scm => 'git'

    url = args[0]
    name = args[1]
    branch = options.branch
    scm = options.scm
    
    Init.new.add(url, name, branch, scm)
  end
end

command :list do |c|
  c.syntax = 'goldberg list'
  c.description = 'List all the projects being tracked & built by this goldberg instance.'
  c.action do |args, options|
    Init.new.list
  end
end

command :start_poller do |c|
  c.syntax = 'goldberg start_poller'
  c.description = 'Starts a polling process, which will check for updates and build the project if updates available.'
  c.action do |args, options|
    Init.new.start_poller
  end
end

command :remove do |c|
  c.syntax = 'goldberg remove <name>'
  c.description = 'Remove the project from goldberg. This removes the checkout codebase, all builds and history from filesystem as well as the DB.'
  c.summary = 'Remove the project from goldberg'
  c.action do |args, options|
    project_name = args[0]
    agree("Do you want to get rid of #{project_name}?").tap do |confirmed|
      Init.new.remove(project_name) if confirmed
    end
  end
end
